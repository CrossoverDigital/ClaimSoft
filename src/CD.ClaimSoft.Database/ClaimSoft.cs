

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Configuration file:     "CD.ClaimSoft.Database\App.config"
//     Connection String Name: "ClaimSoftContext"
//     Connection String:      "data source=.;initial catalog=cdTest;user id=cdServiceAccount;password=**zapped**;;MultipleActiveResultSets=True;App=EntityFramework"
// ------------------------------------------------------------------------------------------------
// Database Edition       : Enterprise Edition (64-bit)
// Database Engine Edition: Enterprise

// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CD.ClaimSoft.Database
{

    #region Unit of work

    public interface IClaimSoftContext : System.IDisposable
    {
        System.Data.Entity.DbSet<AddressType> AddressTypes { get; set; } // AddressType
        System.Data.Entity.DbSet<Agency> Agencies { get; set; } // Agency
        System.Data.Entity.DbSet<AgencyAddress> AgencyAddresses { get; set; } // AgencyAddress
        System.Data.Entity.DbSet<AgencyEmail> AgencyEmails { get; set; } // AgencyEmail
        System.Data.Entity.DbSet<AgencyNumber> AgencyNumbers { get; set; } // AgencyNumber
        System.Data.Entity.DbSet<AgencyPhone> AgencyPhones { get; set; } // AgencyPhone
        System.Data.Entity.DbSet<AgencyUser> AgencyUsers { get; set; } // AgencyUser
        System.Data.Entity.DbSet<AspNetRole> AspNetRoles { get; set; } // AspNetRoles
        System.Data.Entity.DbSet<AspNetUser> AspNetUsers { get; set; } // AspNetUsers
        System.Data.Entity.DbSet<AspNetUserClaim> AspNetUserClaims { get; set; } // AspNetUserClaims
        System.Data.Entity.DbSet<AspNetUserLogin> AspNetUserLogins { get; set; } // AspNetUserLogins
        System.Data.Entity.DbSet<AspNetUserRole> AspNetUserRoles { get; set; } // AspNetUserRoles
        System.Data.Entity.DbSet<Country> Countries { get; set; } // Country
        System.Data.Entity.DbSet<County> Counties { get; set; } // County
        System.Data.Entity.DbSet<EmailType> EmailTypes { get; set; } // EmailType
        System.Data.Entity.DbSet<PhoneType> PhoneTypes { get; set; } // PhoneType
        System.Data.Entity.DbSet<State> States { get; set; } // State
        System.Data.Entity.DbSet<UnitRoundingType> UnitRoundingTypes { get; set; } // UnitRoundingType

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();
    }

    #endregion

    #region Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class ClaimSoftContext : System.Data.Entity.DbContext, IClaimSoftContext
    {
        public System.Data.Entity.DbSet<AddressType> AddressTypes { get; set; } // AddressType
        public System.Data.Entity.DbSet<Agency> Agencies { get; set; } // Agency
        public System.Data.Entity.DbSet<AgencyAddress> AgencyAddresses { get; set; } // AgencyAddress
        public System.Data.Entity.DbSet<AgencyEmail> AgencyEmails { get; set; } // AgencyEmail
        public System.Data.Entity.DbSet<AgencyNumber> AgencyNumbers { get; set; } // AgencyNumber
        public System.Data.Entity.DbSet<AgencyPhone> AgencyPhones { get; set; } // AgencyPhone
        public System.Data.Entity.DbSet<AgencyUser> AgencyUsers { get; set; } // AgencyUser
        public System.Data.Entity.DbSet<AspNetRole> AspNetRoles { get; set; } // AspNetRoles
        public System.Data.Entity.DbSet<AspNetUser> AspNetUsers { get; set; } // AspNetUsers
        public System.Data.Entity.DbSet<AspNetUserClaim> AspNetUserClaims { get; set; } // AspNetUserClaims
        public System.Data.Entity.DbSet<AspNetUserLogin> AspNetUserLogins { get; set; } // AspNetUserLogins
        public System.Data.Entity.DbSet<AspNetUserRole> AspNetUserRoles { get; set; } // AspNetUserRoles
        public System.Data.Entity.DbSet<Country> Countries { get; set; } // Country
        public System.Data.Entity.DbSet<County> Counties { get; set; } // County
        public System.Data.Entity.DbSet<EmailType> EmailTypes { get; set; } // EmailType
        public System.Data.Entity.DbSet<PhoneType> PhoneTypes { get; set; } // PhoneType
        public System.Data.Entity.DbSet<State> States { get; set; } // State
        public System.Data.Entity.DbSet<UnitRoundingType> UnitRoundingTypes { get; set; } // UnitRoundingType

        static ClaimSoftContext()
        {
            System.Data.Entity.Database.SetInitializer<ClaimSoftContext>(null);
        }

        public ClaimSoftContext()
            : base("Name=ClaimSoftContext")
        {
            InitializePartial();
        }

        public ClaimSoftContext(string connectionString)
            : base(connectionString)
        {
            InitializePartial();
        }

        public ClaimSoftContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
            InitializePartial();
        }

        public ClaimSoftContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
            InitializePartial();
        }

        public ClaimSoftContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
            InitializePartial();
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new AddressTypeConfiguration());
            modelBuilder.Configurations.Add(new AgencyConfiguration());
            modelBuilder.Configurations.Add(new AgencyAddressConfiguration());
            modelBuilder.Configurations.Add(new AgencyEmailConfiguration());
            modelBuilder.Configurations.Add(new AgencyNumberConfiguration());
            modelBuilder.Configurations.Add(new AgencyPhoneConfiguration());
            modelBuilder.Configurations.Add(new AgencyUserConfiguration());
            modelBuilder.Configurations.Add(new AspNetRoleConfiguration());
            modelBuilder.Configurations.Add(new AspNetUserConfiguration());
            modelBuilder.Configurations.Add(new AspNetUserClaimConfiguration());
            modelBuilder.Configurations.Add(new AspNetUserLoginConfiguration());
            modelBuilder.Configurations.Add(new AspNetUserRoleConfiguration());
            modelBuilder.Configurations.Add(new CountryConfiguration());
            modelBuilder.Configurations.Add(new CountyConfiguration());
            modelBuilder.Configurations.Add(new EmailTypeConfiguration());
            modelBuilder.Configurations.Add(new PhoneTypeConfiguration());
            modelBuilder.Configurations.Add(new StateConfiguration());
            modelBuilder.Configurations.Add(new UnitRoundingTypeConfiguration());

            OnModelCreatingPartial(modelBuilder);
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new AddressTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new AgencyConfiguration(schema));
            modelBuilder.Configurations.Add(new AgencyAddressConfiguration(schema));
            modelBuilder.Configurations.Add(new AgencyEmailConfiguration(schema));
            modelBuilder.Configurations.Add(new AgencyNumberConfiguration(schema));
            modelBuilder.Configurations.Add(new AgencyPhoneConfiguration(schema));
            modelBuilder.Configurations.Add(new AgencyUserConfiguration(schema));
            modelBuilder.Configurations.Add(new AspNetRoleConfiguration(schema));
            modelBuilder.Configurations.Add(new AspNetUserConfiguration(schema));
            modelBuilder.Configurations.Add(new AspNetUserClaimConfiguration(schema));
            modelBuilder.Configurations.Add(new AspNetUserLoginConfiguration(schema));
            modelBuilder.Configurations.Add(new AspNetUserRoleConfiguration(schema));
            modelBuilder.Configurations.Add(new CountryConfiguration(schema));
            modelBuilder.Configurations.Add(new CountyConfiguration(schema));
            modelBuilder.Configurations.Add(new EmailTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new PhoneTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new StateConfiguration(schema));
            modelBuilder.Configurations.Add(new UnitRoundingTypeConfiguration(schema));
            return modelBuilder;
        }

        partial void InitializePartial();
        partial void OnModelCreatingPartial(System.Data.Entity.DbModelBuilder modelBuilder);
    }
    #endregion

    #region Database context factory

    public class ClaimSoftContextFactory : System.Data.Entity.Infrastructure.IDbContextFactory<ClaimSoftContext>
    {
        public ClaimSoftContext Create()
        {
            return new ClaimSoftContext();
        }
    }

    #endregion

    #region POCO classes

    // AddressType
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class AddressType
    {
        public int Id { get; set; } // Id (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public string CreateBy { get; set; } // CreateBy (length: 50)
        public System.DateTime CreateDate { get; set; } // CreateDate
        public string LastModifyBy { get; set; } // LastModifyBy (length: 50)
        public System.DateTime LastModifyDate { get; set; } // LastModifyDate

        // Reverse navigation

        /// <summary>
        /// Child AgencyAddresses where [AgencyAddress].[AddressTypeId] point to this entity (FK_AgencyAddress_AddressType)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AgencyAddress> AgencyAddresses { get; set; } // AgencyAddress.FK_AgencyAddress_AddressType

        public AddressType()
        {
            CreateBy = "CDUNCAN";
            CreateDate = System.DateTime.Now;
            LastModifyBy = "CDUNCAN";
            LastModifyDate = System.DateTime.Now;
            AgencyAddresses = new System.Collections.Generic.List<AgencyAddress>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Agency
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class Agency
    {
        public int Id { get; set; } // Id (Primary key)
        public string AgencyTenantId { get; set; } // AgencyTenantId (length: 128)
        public string Code { get; set; } // Code (length: 50)
        public string Name { get; set; } // Name (length: 100)
        public bool IsActive { get; set; } // IsActive
        public System.DateTime? InactivedDate { get; set; } // InactivedDate
        public int? ParentAgencyId { get; set; } // ParentAgencyId
        public string AgencyTimeZone { get; set; } // AgencyTimeZone (length: 100)
        public bool UsesDaylightSavings { get; set; } // UsesDaylightSavings
        public string WebSite { get; set; } // WebSite (length: 250)
        public string ContactName { get; set; } // ContactName (length: 250)
        public int NpiNumber { get; set; } // NpiNumber
        public int? TaxIdNumber { get; set; } // TaxIdNumber
        public string Taxonomy { get; set; } // Taxonomy (length: 50)
        public bool DisableLifetimeSignature { get; set; } // DisableLifetimeSignature
        public bool PatientDataUseNemsis { get; set; } // PatientDataUseNemsis
        public bool ClaimDataUseNemsis { get; set; } // ClaimDataUseNemsis
        public string NemsisTimezone { get; set; } // NemsisTimezone (length: 100)
        public int? DefaultClaimTagId { get; set; } // DefaultClaimTagId
        public int? UnitRoundingTypeId { get; set; } // UnitRoundingTypeId
        public string ImagePath { get; set; } // ImagePath (length: 250)
        public string CreateBy { get; set; } // CreateBy (length: 50)
        public System.DateTime CreateDate { get; set; } // CreateDate
        public string LastModifyBy { get; set; } // LastModifyBy (length: 50)
        public System.DateTime LastModifyDate { get; set; } // LastModifyDate

        // Reverse navigation

        /// <summary>
        /// Child Agencies where [Agency].[ParentAgencyId] point to this entity (FK_Agency_Agency)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Agency> Agencies { get; set; } // Agency.FK_Agency_Agency
        /// <summary>
        /// Child AgencyAddresses where [AgencyAddress].[AgencyId] point to this entity (FK_AgencyAddress_Agency)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AgencyAddress> AgencyAddresses { get; set; } // AgencyAddress.FK_AgencyAddress_Agency
        /// <summary>
        /// Child AgencyEmails where [AgencyEmail].[AgencyId] point to this entity (FK_AgencyEmail_Agency)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AgencyEmail> AgencyEmails { get; set; } // AgencyEmail.FK_AgencyEmail_Agency
        /// <summary>
        /// Child AgencyNumbers where [AgencyNumber].[AgencyId] point to this entity (FK_AgencyNumber_Agency)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AgencyNumber> AgencyNumbers { get; set; } // AgencyNumber.FK_AgencyNumber_Agency
        /// <summary>
        /// Child AgencyPhones where [AgencyPhone].[AgencyId] point to this entity (FK_AgencyPhone_Agency)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AgencyPhone> AgencyPhones { get; set; } // AgencyPhone.FK_AgencyPhone_Agency
        /// <summary>
        /// Child AgencyUsers where [AgencyUser].[AgencyId] point to this entity (FK_AgencyUser_Agency)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AgencyUser> AgencyUsers { get; set; } // AgencyUser.FK_AgencyUser_Agency

        // Foreign keys

        /// <summary>
        /// Parent Agency pointed by [Agency].([ParentAgencyId]) (FK_Agency_Agency)
        /// </summary>
        public virtual Agency ParentAgency { get; set; } // FK_Agency_Agency

        /// <summary>
        /// Parent UnitRoundingType pointed by [Agency].([UnitRoundingTypeId]) (FK_Agency_UnitRoundingType)
        /// </summary>
        public virtual UnitRoundingType UnitRoundingType { get; set; } // FK_Agency_UnitRoundingType

        public Agency()
        {
            IsActive = true;
            UsesDaylightSavings = false;
            DisableLifetimeSignature = false;
            PatientDataUseNemsis = false;
            ClaimDataUseNemsis = false;
            CreateBy = "CDUNCAN";
            CreateDate = System.DateTime.Now;
            LastModifyBy = "CDUNCAN";
            LastModifyDate = System.DateTime.Now;
            Agencies = new System.Collections.Generic.List<Agency>();
            AgencyAddresses = new System.Collections.Generic.List<AgencyAddress>();
            AgencyEmails = new System.Collections.Generic.List<AgencyEmail>();
            AgencyNumbers = new System.Collections.Generic.List<AgencyNumber>();
            AgencyPhones = new System.Collections.Generic.List<AgencyPhone>();
            AgencyUsers = new System.Collections.Generic.List<AgencyUser>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AgencyAddress
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class AgencyAddress
    {
        public int Id { get; set; } // Id (Primary key)
        public int AgencyId { get; set; } // AgencyId
        public int AddressTypeId { get; set; } // AddressTypeId
        public string Address1 { get; set; } // Address1 (length: 150)
        public string Address2 { get; set; } // Address2 (length: 150)
        public string City { get; set; } // City (length: 150)
        public int? CountyId { get; set; } // CountyId
        public int StateId { get; set; } // StateId
        public int? CountryId { get; set; } // CountryId
        public string ZipCode { get; set; } // ZipCode (length: 15)
        public bool IsPayToAddress { get; set; } // IsPayToAddress
        public bool IsReturnAddress { get; set; } // IsReturnAddress
        public string CreateBy { get; set; } // CreateBy (length: 50)
        public System.DateTime CreateDate { get; set; } // CreateDate
        public string LastModifyBy { get; set; } // LastModifyBy (length: 50)
        public System.DateTime LastModifyDate { get; set; } // LastModifyDate

        // Foreign keys

        /// <summary>
        /// Parent AddressType pointed by [AgencyAddress].([AddressTypeId]) (FK_AgencyAddress_AddressType)
        /// </summary>
        public virtual AddressType AddressType { get; set; } // FK_AgencyAddress_AddressType

        /// <summary>
        /// Parent Agency pointed by [AgencyAddress].([AgencyId]) (FK_AgencyAddress_Agency)
        /// </summary>
        public virtual Agency Agency { get; set; } // FK_AgencyAddress_Agency

        /// <summary>
        /// Parent Country pointed by [AgencyAddress].([CountyId]) (FK_AgencyAddress_Country)
        /// </summary>
        public virtual Country Country { get; set; } // FK_AgencyAddress_Country

        /// <summary>
        /// Parent County pointed by [AgencyAddress].([CountyId]) (FK_AgencyAddress_County)
        /// </summary>
        public virtual County County { get; set; } // FK_AgencyAddress_County

        /// <summary>
        /// Parent State pointed by [AgencyAddress].([StateId]) (FK_AgencyAddress_State)
        /// </summary>
        public virtual State State { get; set; } // FK_AgencyAddress_State

        public AgencyAddress()
        {
            IsPayToAddress = false;
            IsReturnAddress = false;
            CreateBy = "CDUNCAN";
            CreateDate = System.DateTime.Now;
            LastModifyBy = "CDUNCAN";
            LastModifyDate = System.DateTime.Now;
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AgencyEmail
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class AgencyEmail
    {
        public int Id { get; set; } // Id (Primary key)
        public int AgencyId { get; set; } // AgencyId
        public int EmailTypeId { get; set; } // EmailTypeId
        public string EmailAddress { get; set; } // EmailAddress (length: 255)
        public string CreateBy { get; set; } // CreateBy (length: 50)
        public System.DateTime CreateDate { get; set; } // CreateDate
        public string LastModifyBy { get; set; } // LastModifyBy (length: 50)
        public System.DateTime LastModifyDate { get; set; } // LastModifyDate

        // Foreign keys

        /// <summary>
        /// Parent Agency pointed by [AgencyEmail].([AgencyId]) (FK_AgencyEmail_Agency)
        /// </summary>
        public virtual Agency Agency { get; set; } // FK_AgencyEmail_Agency

        /// <summary>
        /// Parent EmailType pointed by [AgencyEmail].([EmailTypeId]) (FK_AgencyEmail_EmailType)
        /// </summary>
        public virtual EmailType EmailType { get; set; } // FK_AgencyEmail_EmailType

        public AgencyEmail()
        {
            CreateBy = "CDUNCAN";
            CreateDate = System.DateTime.Now;
            LastModifyBy = "CDUNCAN";
            LastModifyDate = System.DateTime.Now;
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AgencyNumber
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class AgencyNumber
    {
        public int Id { get; set; } // Id (Primary key)
        public int AgencyId { get; set; } // AgencyId
        public string Number { get; set; } // Number (length: 50)
        public bool IgnoreTimeStamps { get; set; } // IgnoreTimeStamps
        public string CreateBy { get; set; } // CreateBy (length: 50)
        public System.DateTime CreateDate { get; set; } // CreateDate
        public string LastModifyBy { get; set; } // LastModifyBy (length: 50)
        public System.DateTime LastModifyDate { get; set; } // LastModifyDate

        // Foreign keys

        /// <summary>
        /// Parent Agency pointed by [AgencyNumber].([AgencyId]) (FK_AgencyNumber_Agency)
        /// </summary>
        public virtual Agency Agency { get; set; } // FK_AgencyNumber_Agency

        public AgencyNumber()
        {
            IgnoreTimeStamps = false;
            CreateBy = "CDUNCAN";
            CreateDate = System.DateTime.Now;
            LastModifyBy = "CDUNCAN";
            LastModifyDate = System.DateTime.Now;
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AgencyPhone
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class AgencyPhone
    {
        public int Id { get; set; } // Id (Primary key)
        public int AgencyId { get; set; } // AgencyId
        public int PhoneTypeId { get; set; } // PhoneTypeId
        public int AreaCode { get; set; } // AreaCode
        public int Prefix { get; set; } // Prefix
        public int LineNumber { get; set; } // LineNumber
        public string CreateBy { get; set; } // CreateBy (length: 50)
        public System.DateTime CreateDate { get; set; } // CreateDate
        public string LastModifyBy { get; set; } // LastModifyBy (length: 50)
        public System.DateTime LastModifyDate { get; set; } // LastModifyDate

        // Foreign keys

        /// <summary>
        /// Parent Agency pointed by [AgencyPhone].([AgencyId]) (FK_AgencyPhone_Agency)
        /// </summary>
        public virtual Agency Agency { get; set; } // FK_AgencyPhone_Agency

        /// <summary>
        /// Parent PhoneType pointed by [AgencyPhone].([PhoneTypeId]) (FK_AgencyPhone_PhoneType)
        /// </summary>
        public virtual PhoneType PhoneType { get; set; } // FK_AgencyPhone_PhoneType

        public AgencyPhone()
        {
            CreateBy = "CDUNCAN";
            CreateDate = System.DateTime.Now;
            LastModifyBy = "CDUNCAN";
            LastModifyDate = System.DateTime.Now;
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AgencyUser
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class AgencyUser
    {
        public int Id { get; set; } // Id (Primary key)
        public int AgencyId { get; set; } // AgencyId
        public string AspNetUserId { get; set; } // AspNetUserId (length: 128)
        public string CreateBy { get; set; } // CreateBy (length: 50)
        public System.DateTime CreateDate { get; set; } // CreateDate
        public string LastModifyBy { get; set; } // LastModifyBy (length: 50)
        public System.DateTime LastModifyDate { get; set; } // LastModifyDate

        // Foreign keys

        /// <summary>
        /// Parent Agency pointed by [AgencyUser].([AgencyId]) (FK_AgencyUser_Agency)
        /// </summary>
        public virtual Agency Agency { get; set; } // FK_AgencyUser_Agency

        /// <summary>
        /// Parent AspNetUser pointed by [AgencyUser].([AspNetUserId]) (FK_AgencyUser_AspNetUsers)
        /// </summary>
        public virtual AspNetUser AspNetUser { get; set; } // FK_AgencyUser_AspNetUsers

        public AgencyUser()
        {
            CreateBy = "CDUNCAN";
            CreateDate = System.DateTime.Now;
            LastModifyBy = "CDUNCAN";
            LastModifyDate = System.DateTime.Now;
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AspNetRoles
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class AspNetRole
    {
        public string Id { get; set; } // Id (Primary key) (length: 128)
        public string Name { get; set; } // Name (length: 256)
        public string CreateBy { get; set; } // CreateBy (length: 50)
        public System.DateTime CreateDate { get; set; } // CreateDate
        public string LastModifyBy { get; set; } // LastModifyBy (length: 50)
        public System.DateTime LastModifyDate { get; set; } // LastModifyDate

        // Reverse navigation

        /// <summary>
        /// Child AspNetUserRoles where [AspNetUserRoles].[RoleId] point to this entity (FK_dbo.AspNetUserRoles_dbo.AspNetRoles_RoleId)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AspNetUserRole> AspNetUserRoles { get; set; } // AspNetUserRoles.FK_dbo.AspNetUserRoles_dbo.AspNetRoles_RoleId

        public AspNetRole()
        {
            CreateBy = "CDUNCAN";
            CreateDate = System.DateTime.Now;
            LastModifyBy = "CDUNCAN";
            LastModifyDate = System.DateTime.Now;
            AspNetUserRoles = new System.Collections.Generic.List<AspNetUserRole>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AspNetUsers
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class AspNetUser
    {
        public string Id { get; set; } // Id (Primary key) (length: 128)
        public string Email { get; set; } // Email (length: 256)
        public bool EmailConfirmed { get; set; } // EmailConfirmed
        public string PasswordHash { get; set; } // PasswordHash
        public string SecurityStamp { get; set; } // SecurityStamp
        public string PhoneNumber { get; set; } // PhoneNumber
        public bool PhoneNumberConfirmed { get; set; } // PhoneNumberConfirmed
        public bool TwoFactorEnabled { get; set; } // TwoFactorEnabled
        public System.DateTime? LockoutEndDateUtc { get; set; } // LockoutEndDateUtc
        public bool LockoutEnabled { get; set; } // LockoutEnabled
        public int AccessFailedCount { get; set; } // AccessFailedCount
        public string UserName { get; set; } // UserName (length: 256)
        public string CreateBy { get; set; } // CreateBy (length: 50)
        public System.DateTime CreateDate { get; set; } // CreateDate
        public string LastModifyBy { get; set; } // LastModifyBy (length: 50)
        public System.DateTime LastModifyDate { get; set; } // LastModifyDate

        // Reverse navigation

        /// <summary>
        /// Child AgencyUsers where [AgencyUser].[AspNetUserId] point to this entity (FK_AgencyUser_AspNetUsers)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AgencyUser> AgencyUsers { get; set; } // AgencyUser.FK_AgencyUser_AspNetUsers
        /// <summary>
        /// Child AspNetUserClaims where [AspNetUserClaims].[UserId] point to this entity (FK_dbo.AspNetUserClaims_dbo.AspNetUsers_UserId)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AspNetUserClaim> AspNetUserClaims { get; set; } // AspNetUserClaims.FK_dbo.AspNetUserClaims_dbo.AspNetUsers_UserId
        /// <summary>
        /// Child AspNetUserLogins where [AspNetUserLogins].[UserId] point to this entity (FK_dbo.AspNetUserLogins_dbo.AspNetUsers_UserId)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AspNetUserLogin> AspNetUserLogins { get; set; } // AspNetUserLogins.FK_dbo.AspNetUserLogins_dbo.AspNetUsers_UserId
        /// <summary>
        /// Child AspNetUserRoles where [AspNetUserRoles].[UserId] point to this entity (FK_dbo.AspNetUserRoles_dbo.AspNetUsers_UserId)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AspNetUserRole> AspNetUserRoles { get; set; } // AspNetUserRoles.FK_dbo.AspNetUserRoles_dbo.AspNetUsers_UserId

        public AspNetUser()
        {
            CreateBy = "CDUNCAN";
            CreateDate = System.DateTime.Now;
            LastModifyBy = "CDUNCAN";
            LastModifyDate = System.DateTime.Now;
            AgencyUsers = new System.Collections.Generic.List<AgencyUser>();
            AspNetUserClaims = new System.Collections.Generic.List<AspNetUserClaim>();
            AspNetUserLogins = new System.Collections.Generic.List<AspNetUserLogin>();
            AspNetUserRoles = new System.Collections.Generic.List<AspNetUserRole>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AspNetUserClaims
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class AspNetUserClaim
    {
        public int Id { get; set; } // Id (Primary key)
        public string UserId { get; set; } // UserId (length: 128)
        public string ClaimType { get; set; } // ClaimType
        public string ClaimValue { get; set; } // ClaimValue
        public string CreateBy { get; set; } // CreateBy (length: 50)
        public System.DateTime CreateDate { get; set; } // CreateDate
        public string LastModifyBy { get; set; } // LastModifyBy (length: 50)
        public System.DateTime LastModifyDate { get; set; } // LastModifyDate

        // Foreign keys

        /// <summary>
        /// Parent AspNetUser pointed by [AspNetUserClaims].([UserId]) (FK_dbo.AspNetUserClaims_dbo.AspNetUsers_UserId)
        /// </summary>
        public virtual AspNetUser AspNetUser { get; set; } // FK_dbo.AspNetUserClaims_dbo.AspNetUsers_UserId

        public AspNetUserClaim()
        {
            CreateBy = "CDUNCAN";
            CreateDate = System.DateTime.Now;
            LastModifyBy = "CDUNCAN";
            LastModifyDate = System.DateTime.Now;
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AspNetUserLogins
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class AspNetUserLogin
    {
        public string LoginProvider { get; set; } // LoginProvider (Primary key) (length: 128)
        public string ProviderKey { get; set; } // ProviderKey (Primary key) (length: 128)
        public string UserId { get; set; } // UserId (Primary key) (length: 128)
        public string CreateBy { get; set; } // CreateBy (length: 50)
        public System.DateTime CreateDate { get; set; } // CreateDate
        public string LastModifyBy { get; set; } // LastModifyBy (length: 50)
        public System.DateTime LastModifyDate { get; set; } // LastModifyDate

        // Foreign keys

        /// <summary>
        /// Parent AspNetUser pointed by [AspNetUserLogins].([UserId]) (FK_dbo.AspNetUserLogins_dbo.AspNetUsers_UserId)
        /// </summary>
        public virtual AspNetUser AspNetUser { get; set; } // FK_dbo.AspNetUserLogins_dbo.AspNetUsers_UserId

        public AspNetUserLogin()
        {
            CreateBy = "CDUNCAN";
            CreateDate = System.DateTime.Now;
            LastModifyBy = "CDUNCAN";
            LastModifyDate = System.DateTime.Now;
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AspNetUserRoles
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class AspNetUserRole
    {
        public string UserId { get; set; } // UserId (Primary key) (length: 128)
        public string RoleId { get; set; } // RoleId (Primary key) (length: 128)
        public string CreateBy { get; set; } // CreateBy (length: 50)
        public System.DateTime CreateDate { get; set; } // CreateDate
        public string LastModifyBy { get; set; } // LastModifyBy (length: 50)
        public System.DateTime LastModifyDate { get; set; } // LastModifyDate

        // Foreign keys

        /// <summary>
        /// Parent AspNetRole pointed by [AspNetUserRoles].([RoleId]) (FK_dbo.AspNetUserRoles_dbo.AspNetRoles_RoleId)
        /// </summary>
        public virtual AspNetRole AspNetRole { get; set; } // FK_dbo.AspNetUserRoles_dbo.AspNetRoles_RoleId

        /// <summary>
        /// Parent AspNetUser pointed by [AspNetUserRoles].([UserId]) (FK_dbo.AspNetUserRoles_dbo.AspNetUsers_UserId)
        /// </summary>
        public virtual AspNetUser AspNetUser { get; set; } // FK_dbo.AspNetUserRoles_dbo.AspNetUsers_UserId

        public AspNetUserRole()
        {
            CreateBy = "CDUNCAN";
            CreateDate = System.DateTime.Now;
            LastModifyBy = "CDUNCAN";
            LastModifyDate = System.DateTime.Now;
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Country
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class Country
    {
        public int Id { get; set; } // Id (Primary key)
        public string Iso { get; set; } // Iso (length: 2)
        public string Name { get; set; } // Name (length: 80)
        public string NiceName { get; set; } // NiceName (length: 80)
        public string Iso3 { get; set; } // Iso3 (length: 3)
        public short? NumCode { get; set; } // NumCode
        public int PhoneCode { get; set; } // PhoneCode
        public string CreateBy { get; set; } // CreateBy (length: 50)
        public System.DateTime CreateDate { get; set; } // CreateDate
        public string LastModifyBy { get; set; } // LastModifyBy (length: 50)
        public System.DateTime LastModifyDate { get; set; } // LastModifyDate

        // Reverse navigation

        /// <summary>
        /// Child AgencyAddresses where [AgencyAddress].[CountyId] point to this entity (FK_AgencyAddress_Country)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AgencyAddress> AgencyAddresses { get; set; } // AgencyAddress.FK_AgencyAddress_Country
        /// <summary>
        /// Child States where [State].[CountryId] point to this entity (FK_State_Country)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<State> States { get; set; } // State.FK_State_Country

        public Country()
        {
            CreateBy = "CDUNCAN";
            CreateDate = System.DateTime.Now;
            LastModifyBy = "CDUNCAN";
            LastModifyDate = System.DateTime.Now;
            AgencyAddresses = new System.Collections.Generic.List<AgencyAddress>();
            States = new System.Collections.Generic.List<State>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // County
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class County
    {
        public int Id { get; set; } // Id (Primary key)
        public int StateId { get; set; } // StateId
        public string Name { get; set; } // Name (length: 50)
        public string Code { get; set; } // Code (length: 50)
        public string Gnis { get; set; } // GNIS (length: 50)
        public string FipsStcty { get; set; } // FIPS_STCTY (length: 50)
        public string Fips { get; set; } // FIPS (length: 50)
        public string CreateBy { get; set; } // CreateBy (length: 50)
        public System.DateTime CreateDate { get; set; } // CreateDate
        public string LastModifyBy { get; set; } // LastModifyBy (length: 50)
        public System.DateTime LastModifyDate { get; set; } // LastModifyDate

        // Reverse navigation

        /// <summary>
        /// Child AgencyAddresses where [AgencyAddress].[CountyId] point to this entity (FK_AgencyAddress_County)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AgencyAddress> AgencyAddresses { get; set; } // AgencyAddress.FK_AgencyAddress_County

        // Foreign keys

        /// <summary>
        /// Parent State pointed by [County].([StateId]) (FK_County_State)
        /// </summary>
        public virtual State State { get; set; } // FK_County_State

        public County()
        {
            CreateBy = "CDUNCAN";
            CreateDate = System.DateTime.Now;
            LastModifyBy = "CDUNCAN";
            LastModifyDate = System.DateTime.Now;
            AgencyAddresses = new System.Collections.Generic.List<AgencyAddress>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // EmailType
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class EmailType
    {
        public int Id { get; set; } // Id (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public string CreateBy { get; set; } // CreateBy (length: 50)
        public System.DateTime CreateDate { get; set; } // CreateDate
        public string LastModifyBy { get; set; } // LastModifyBy (length: 50)
        public System.DateTime LastModifyDate { get; set; } // LastModifyDate

        // Reverse navigation

        /// <summary>
        /// Child AgencyEmails where [AgencyEmail].[EmailTypeId] point to this entity (FK_AgencyEmail_EmailType)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AgencyEmail> AgencyEmails { get; set; } // AgencyEmail.FK_AgencyEmail_EmailType

        public EmailType()
        {
            CreateBy = "CDUNCAN";
            CreateDate = System.DateTime.Now;
            LastModifyBy = "CDUNCAN";
            LastModifyDate = System.DateTime.Now;
            AgencyEmails = new System.Collections.Generic.List<AgencyEmail>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // PhoneType
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class PhoneType
    {
        public int Id { get; set; } // Id (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public string CreateBy { get; set; } // CreateBy (length: 50)
        public System.DateTime CreateDate { get; set; } // CreateDate
        public string LastModifyBy { get; set; } // LastModifyBy (length: 50)
        public System.DateTime LastModifyDate { get; set; } // LastModifyDate

        // Reverse navigation

        /// <summary>
        /// Child AgencyPhones where [AgencyPhone].[PhoneTypeId] point to this entity (FK_AgencyPhone_PhoneType)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AgencyPhone> AgencyPhones { get; set; } // AgencyPhone.FK_AgencyPhone_PhoneType

        public PhoneType()
        {
            CreateBy = "CDUNCAN";
            CreateDate = System.DateTime.Now;
            LastModifyBy = "CDUNCAN";
            LastModifyDate = System.DateTime.Now;
            AgencyPhones = new System.Collections.Generic.List<AgencyPhone>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // State
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class State
    {
        public int Id { get; set; } // Id (Primary key)
        public int CountryId { get; set; } // CountryId
        public string Code { get; set; } // Code (length: 2)
        public string Name { get; set; } // Name (length: 128)
        public string CreateBy { get; set; } // CreateBy (length: 50)
        public System.DateTime CreateDate { get; set; } // CreateDate
        public string LastModifyBy { get; set; } // LastModifyBy (length: 50)
        public System.DateTime LastModifyDate { get; set; } // LastModifyDate

        // Reverse navigation

        /// <summary>
        /// Child AgencyAddresses where [AgencyAddress].[StateId] point to this entity (FK_AgencyAddress_State)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AgencyAddress> AgencyAddresses { get; set; } // AgencyAddress.FK_AgencyAddress_State
        /// <summary>
        /// Child Counties where [County].[StateId] point to this entity (FK_County_State)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<County> Counties { get; set; } // County.FK_County_State

        // Foreign keys

        /// <summary>
        /// Parent Country pointed by [State].([CountryId]) (FK_State_Country)
        /// </summary>
        public virtual Country Country { get; set; } // FK_State_Country

        public State()
        {
            CreateBy = "CDUNCAN";
            CreateDate = System.DateTime.Now;
            LastModifyBy = "CDUNCAN";
            LastModifyDate = System.DateTime.Now;
            AgencyAddresses = new System.Collections.Generic.List<AgencyAddress>();
            Counties = new System.Collections.Generic.List<County>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // UnitRoundingType
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class UnitRoundingType
    {
        public int Id { get; set; } // Id (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public string CreateBy { get; set; } // CreateBy (length: 50)
        public System.DateTime CreateDate { get; set; } // CreateDate
        public string LastModifyBy { get; set; } // LastModifyBy (length: 50)
        public System.DateTime LastModifyDate { get; set; } // LastModifyDate

        // Reverse navigation

        /// <summary>
        /// Child Agencies where [Agency].[UnitRoundingTypeId] point to this entity (FK_Agency_UnitRoundingType)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Agency> Agencies { get; set; } // Agency.FK_Agency_UnitRoundingType

        public UnitRoundingType()
        {
            CreateBy = "CDUNCAN";
            CreateDate = System.DateTime.Now;
            LastModifyBy = "CDUNCAN";
            LastModifyDate = System.DateTime.Now;
            Agencies = new System.Collections.Generic.List<Agency>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    #endregion

    #region POCO Configuration

    // AddressType
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class AddressTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AddressType>
    {
        public AddressTypeConfiguration()
            : this("dbo")
        {
        }

        public AddressTypeConfiguration(string schema)
        {
            ToTable("AddressType", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.CreateBy).HasColumnName(@"CreateBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime").IsRequired();
            Property(x => x.LastModifyBy).HasColumnName(@"LastModifyBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.LastModifyDate).HasColumnName(@"LastModifyDate").HasColumnType("datetime").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Agency
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class AgencyConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Agency>
    {
        public AgencyConfiguration()
            : this("dbo")
        {
        }

        public AgencyConfiguration(string schema)
        {
            ToTable("Agency", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.AgencyTenantId).HasColumnName(@"AgencyTenantId").HasColumnType("nvarchar").IsRequired().HasMaxLength(128);
            Property(x => x.Code).HasColumnName(@"Code").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").IsRequired().HasMaxLength(100);
            Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            Property(x => x.InactivedDate).HasColumnName(@"InactivedDate").HasColumnType("datetime").IsOptional();
            Property(x => x.ParentAgencyId).HasColumnName(@"ParentAgencyId").HasColumnType("int").IsOptional();
            Property(x => x.AgencyTimeZone).HasColumnName(@"AgencyTimeZone").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.UsesDaylightSavings).HasColumnName(@"UsesDaylightSavings").HasColumnType("bit").IsRequired();
            Property(x => x.WebSite).HasColumnName(@"WebSite").HasColumnType("nvarchar").IsOptional().HasMaxLength(250);
            Property(x => x.ContactName).HasColumnName(@"ContactName").HasColumnType("nvarchar").IsRequired().HasMaxLength(250);
            Property(x => x.NpiNumber).HasColumnName(@"NpiNumber").HasColumnType("int").IsRequired();
            Property(x => x.TaxIdNumber).HasColumnName(@"TaxIdNumber").HasColumnType("int").IsOptional();
            Property(x => x.Taxonomy).HasColumnName(@"Taxonomy").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.DisableLifetimeSignature).HasColumnName(@"DisableLifetimeSignature").HasColumnType("bit").IsRequired();
            Property(x => x.PatientDataUseNemsis).HasColumnName(@"PatientDataUseNemsis").HasColumnType("bit").IsRequired();
            Property(x => x.ClaimDataUseNemsis).HasColumnName(@"ClaimDataUseNemsis").HasColumnType("bit").IsRequired();
            Property(x => x.NemsisTimezone).HasColumnName(@"NemsisTimezone").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.DefaultClaimTagId).HasColumnName(@"DefaultClaimTagId").HasColumnType("int").IsOptional();
            Property(x => x.UnitRoundingTypeId).HasColumnName(@"UnitRoundingTypeId").HasColumnType("int").IsOptional();
            Property(x => x.ImagePath).HasColumnName(@"ImagePath").HasColumnType("nvarchar").IsOptional().HasMaxLength(250);
            Property(x => x.CreateBy).HasColumnName(@"CreateBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime").IsRequired();
            Property(x => x.LastModifyBy).HasColumnName(@"LastModifyBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.LastModifyDate).HasColumnName(@"LastModifyDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasOptional(a => a.ParentAgency).WithMany(b => b.Agencies).HasForeignKey(c => c.ParentAgencyId).WillCascadeOnDelete(false); // FK_Agency_Agency
            HasOptional(a => a.UnitRoundingType).WithMany(b => b.Agencies).HasForeignKey(c => c.UnitRoundingTypeId).WillCascadeOnDelete(false); // FK_Agency_UnitRoundingType
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AgencyAddress
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class AgencyAddressConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AgencyAddress>
    {
        public AgencyAddressConfiguration()
            : this("dbo")
        {
        }

        public AgencyAddressConfiguration(string schema)
        {
            ToTable("AgencyAddress", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.AgencyId).HasColumnName(@"AgencyId").HasColumnType("int").IsRequired();
            Property(x => x.AddressTypeId).HasColumnName(@"AddressTypeId").HasColumnType("int").IsRequired();
            Property(x => x.Address1).HasColumnName(@"Address1").HasColumnType("nvarchar").IsRequired().HasMaxLength(150);
            Property(x => x.Address2).HasColumnName(@"Address2").HasColumnType("nvarchar").IsOptional().HasMaxLength(150);
            Property(x => x.City).HasColumnName(@"City").HasColumnType("nvarchar").IsRequired().HasMaxLength(150);
            Property(x => x.CountyId).HasColumnName(@"CountyId").HasColumnType("int").IsOptional();
            Property(x => x.StateId).HasColumnName(@"StateId").HasColumnType("int").IsRequired();
            Property(x => x.CountryId).HasColumnName(@"CountryId").HasColumnType("int").IsOptional();
            Property(x => x.ZipCode).HasColumnName(@"ZipCode").HasColumnType("nvarchar").IsRequired().HasMaxLength(15);
            Property(x => x.IsPayToAddress).HasColumnName(@"IsPayToAddress").HasColumnType("bit").IsRequired();
            Property(x => x.IsReturnAddress).HasColumnName(@"IsReturnAddress").HasColumnType("bit").IsRequired();
            Property(x => x.CreateBy).HasColumnName(@"CreateBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime").IsRequired();
            Property(x => x.LastModifyBy).HasColumnName(@"LastModifyBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.LastModifyDate).HasColumnName(@"LastModifyDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasOptional(a => a.Country).WithMany(b => b.AgencyAddresses).HasForeignKey(c => c.CountyId).WillCascadeOnDelete(false); // FK_AgencyAddress_Country
            HasOptional(a => a.County).WithMany(b => b.AgencyAddresses).HasForeignKey(c => c.CountyId).WillCascadeOnDelete(false); // FK_AgencyAddress_County
            HasRequired(a => a.AddressType).WithMany(b => b.AgencyAddresses).HasForeignKey(c => c.AddressTypeId).WillCascadeOnDelete(false); // FK_AgencyAddress_AddressType
            HasRequired(a => a.Agency).WithMany(b => b.AgencyAddresses).HasForeignKey(c => c.AgencyId).WillCascadeOnDelete(false); // FK_AgencyAddress_Agency
            HasRequired(a => a.State).WithMany(b => b.AgencyAddresses).HasForeignKey(c => c.StateId).WillCascadeOnDelete(false); // FK_AgencyAddress_State
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AgencyEmail
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class AgencyEmailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AgencyEmail>
    {
        public AgencyEmailConfiguration()
            : this("dbo")
        {
        }

        public AgencyEmailConfiguration(string schema)
        {
            ToTable("AgencyEmail", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.AgencyId).HasColumnName(@"AgencyId").HasColumnType("int").IsRequired();
            Property(x => x.EmailTypeId).HasColumnName(@"EmailTypeId").HasColumnType("int").IsRequired();
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("nvarchar").IsRequired().HasMaxLength(255);
            Property(x => x.CreateBy).HasColumnName(@"CreateBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime").IsRequired();
            Property(x => x.LastModifyBy).HasColumnName(@"LastModifyBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.LastModifyDate).HasColumnName(@"LastModifyDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.Agency).WithMany(b => b.AgencyEmails).HasForeignKey(c => c.AgencyId).WillCascadeOnDelete(false); // FK_AgencyEmail_Agency
            HasRequired(a => a.EmailType).WithMany(b => b.AgencyEmails).HasForeignKey(c => c.EmailTypeId).WillCascadeOnDelete(false); // FK_AgencyEmail_EmailType
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AgencyNumber
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class AgencyNumberConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AgencyNumber>
    {
        public AgencyNumberConfiguration()
            : this("dbo")
        {
        }

        public AgencyNumberConfiguration(string schema)
        {
            ToTable("AgencyNumber", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.AgencyId).HasColumnName(@"AgencyId").HasColumnType("int").IsRequired();
            Property(x => x.Number).HasColumnName(@"Number").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.IgnoreTimeStamps).HasColumnName(@"IgnoreTimeStamps").HasColumnType("bit").IsRequired();
            Property(x => x.CreateBy).HasColumnName(@"CreateBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime").IsRequired();
            Property(x => x.LastModifyBy).HasColumnName(@"LastModifyBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.LastModifyDate).HasColumnName(@"LastModifyDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.Agency).WithMany(b => b.AgencyNumbers).HasForeignKey(c => c.AgencyId).WillCascadeOnDelete(false); // FK_AgencyNumber_Agency
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AgencyPhone
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class AgencyPhoneConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AgencyPhone>
    {
        public AgencyPhoneConfiguration()
            : this("dbo")
        {
        }

        public AgencyPhoneConfiguration(string schema)
        {
            ToTable("AgencyPhone", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.AgencyId).HasColumnName(@"AgencyId").HasColumnType("int").IsRequired();
            Property(x => x.PhoneTypeId).HasColumnName(@"PhoneTypeId").HasColumnType("int").IsRequired();
            Property(x => x.AreaCode).HasColumnName(@"AreaCode").HasColumnType("int").IsRequired();
            Property(x => x.Prefix).HasColumnName(@"Prefix").HasColumnType("int").IsRequired();
            Property(x => x.LineNumber).HasColumnName(@"LineNumber").HasColumnType("int").IsRequired();
            Property(x => x.CreateBy).HasColumnName(@"CreateBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime").IsRequired();
            Property(x => x.LastModifyBy).HasColumnName(@"LastModifyBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.LastModifyDate).HasColumnName(@"LastModifyDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.Agency).WithMany(b => b.AgencyPhones).HasForeignKey(c => c.AgencyId).WillCascadeOnDelete(false); // FK_AgencyPhone_Agency
            HasRequired(a => a.PhoneType).WithMany(b => b.AgencyPhones).HasForeignKey(c => c.PhoneTypeId).WillCascadeOnDelete(false); // FK_AgencyPhone_PhoneType
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AgencyUser
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class AgencyUserConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AgencyUser>
    {
        public AgencyUserConfiguration()
            : this("dbo")
        {
        }

        public AgencyUserConfiguration(string schema)
        {
            ToTable("AgencyUser", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.AgencyId).HasColumnName(@"AgencyId").HasColumnType("int").IsRequired();
            Property(x => x.AspNetUserId).HasColumnName(@"AspNetUserId").HasColumnType("nvarchar").IsRequired().HasMaxLength(128);
            Property(x => x.CreateBy).HasColumnName(@"CreateBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime").IsRequired();
            Property(x => x.LastModifyBy).HasColumnName(@"LastModifyBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.LastModifyDate).HasColumnName(@"LastModifyDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.Agency).WithMany(b => b.AgencyUsers).HasForeignKey(c => c.AgencyId).WillCascadeOnDelete(false); // FK_AgencyUser_Agency
            HasRequired(a => a.AspNetUser).WithMany(b => b.AgencyUsers).HasForeignKey(c => c.AspNetUserId).WillCascadeOnDelete(false); // FK_AgencyUser_AspNetUsers
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AspNetRoles
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class AspNetRoleConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AspNetRole>
    {
        public AspNetRoleConfiguration()
            : this("dbo")
        {
        }

        public AspNetRoleConfiguration(string schema)
        {
            ToTable("AspNetRoles", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("nvarchar").IsRequired().HasMaxLength(128).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").IsRequired().HasMaxLength(256);
            Property(x => x.CreateBy).HasColumnName(@"CreateBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime").IsRequired();
            Property(x => x.LastModifyBy).HasColumnName(@"LastModifyBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.LastModifyDate).HasColumnName(@"LastModifyDate").HasColumnType("datetime").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AspNetUsers
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class AspNetUserConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AspNetUser>
    {
        public AspNetUserConfiguration()
            : this("dbo")
        {
        }

        public AspNetUserConfiguration(string schema)
        {
            ToTable("AspNetUsers", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("nvarchar").IsRequired().HasMaxLength(128).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Email).HasColumnName(@"Email").HasColumnType("nvarchar").IsOptional().HasMaxLength(256);
            Property(x => x.EmailConfirmed).HasColumnName(@"EmailConfirmed").HasColumnType("bit").IsRequired();
            Property(x => x.PasswordHash).HasColumnName(@"PasswordHash").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.SecurityStamp).HasColumnName(@"SecurityStamp").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.PhoneNumber).HasColumnName(@"PhoneNumber").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.PhoneNumberConfirmed).HasColumnName(@"PhoneNumberConfirmed").HasColumnType("bit").IsRequired();
            Property(x => x.TwoFactorEnabled).HasColumnName(@"TwoFactorEnabled").HasColumnType("bit").IsRequired();
            Property(x => x.LockoutEndDateUtc).HasColumnName(@"LockoutEndDateUtc").HasColumnType("datetime").IsOptional();
            Property(x => x.LockoutEnabled).HasColumnName(@"LockoutEnabled").HasColumnType("bit").IsRequired();
            Property(x => x.AccessFailedCount).HasColumnName(@"AccessFailedCount").HasColumnType("int").IsRequired();
            Property(x => x.UserName).HasColumnName(@"UserName").HasColumnType("nvarchar").IsRequired().HasMaxLength(256);
            Property(x => x.CreateBy).HasColumnName(@"CreateBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime").IsRequired();
            Property(x => x.LastModifyBy).HasColumnName(@"LastModifyBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.LastModifyDate).HasColumnName(@"LastModifyDate").HasColumnType("datetime").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AspNetUserClaims
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class AspNetUserClaimConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AspNetUserClaim>
    {
        public AspNetUserClaimConfiguration()
            : this("dbo")
        {
        }

        public AspNetUserClaimConfiguration(string schema)
        {
            ToTable("AspNetUserClaims", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserId).HasColumnName(@"UserId").HasColumnType("nvarchar").IsRequired().HasMaxLength(128);
            Property(x => x.ClaimType).HasColumnName(@"ClaimType").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.ClaimValue).HasColumnName(@"ClaimValue").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.CreateBy).HasColumnName(@"CreateBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime").IsRequired();
            Property(x => x.LastModifyBy).HasColumnName(@"LastModifyBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.LastModifyDate).HasColumnName(@"LastModifyDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.AspNetUser).WithMany(b => b.AspNetUserClaims).HasForeignKey(c => c.UserId); // FK_dbo.AspNetUserClaims_dbo.AspNetUsers_UserId
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AspNetUserLogins
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class AspNetUserLoginConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AspNetUserLogin>
    {
        public AspNetUserLoginConfiguration()
            : this("dbo")
        {
        }

        public AspNetUserLoginConfiguration(string schema)
        {
            ToTable("AspNetUserLogins", schema);
            HasKey(x => new { x.LoginProvider, x.ProviderKey, x.UserId });

            Property(x => x.LoginProvider).HasColumnName(@"LoginProvider").HasColumnType("nvarchar").IsRequired().HasMaxLength(128).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ProviderKey).HasColumnName(@"ProviderKey").HasColumnType("nvarchar").IsRequired().HasMaxLength(128).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.UserId).HasColumnName(@"UserId").HasColumnType("nvarchar").IsRequired().HasMaxLength(128).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CreateBy).HasColumnName(@"CreateBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime").IsRequired();
            Property(x => x.LastModifyBy).HasColumnName(@"LastModifyBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.LastModifyDate).HasColumnName(@"LastModifyDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.AspNetUser).WithMany(b => b.AspNetUserLogins).HasForeignKey(c => c.UserId); // FK_dbo.AspNetUserLogins_dbo.AspNetUsers_UserId
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AspNetUserRoles
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class AspNetUserRoleConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AspNetUserRole>
    {
        public AspNetUserRoleConfiguration()
            : this("dbo")
        {
        }

        public AspNetUserRoleConfiguration(string schema)
        {
            ToTable("AspNetUserRoles", schema);
            HasKey(x => new { x.UserId, x.RoleId });

            Property(x => x.UserId).HasColumnName(@"UserId").HasColumnType("nvarchar").IsRequired().HasMaxLength(128).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.RoleId).HasColumnName(@"RoleId").HasColumnType("nvarchar").IsRequired().HasMaxLength(128).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CreateBy).HasColumnName(@"CreateBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime").IsRequired();
            Property(x => x.LastModifyBy).HasColumnName(@"LastModifyBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.LastModifyDate).HasColumnName(@"LastModifyDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.AspNetRole).WithMany(b => b.AspNetUserRoles).HasForeignKey(c => c.RoleId); // FK_dbo.AspNetUserRoles_dbo.AspNetRoles_RoleId
            HasRequired(a => a.AspNetUser).WithMany(b => b.AspNetUserRoles).HasForeignKey(c => c.UserId); // FK_dbo.AspNetUserRoles_dbo.AspNetUsers_UserId
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Country
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class CountryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Country>
    {
        public CountryConfiguration()
            : this("dbo")
        {
        }

        public CountryConfiguration(string schema)
        {
            ToTable("Country", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Iso).HasColumnName(@"Iso").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(2);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").IsRequired().HasMaxLength(80);
            Property(x => x.NiceName).HasColumnName(@"NiceName").HasColumnType("nvarchar").IsRequired().HasMaxLength(80);
            Property(x => x.Iso3).HasColumnName(@"Iso3").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(3);
            Property(x => x.NumCode).HasColumnName(@"NumCode").HasColumnType("smallint").IsOptional();
            Property(x => x.PhoneCode).HasColumnName(@"PhoneCode").HasColumnType("int").IsRequired();
            Property(x => x.CreateBy).HasColumnName(@"CreateBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime").IsRequired();
            Property(x => x.LastModifyBy).HasColumnName(@"LastModifyBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.LastModifyDate).HasColumnName(@"LastModifyDate").HasColumnType("datetime").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // County
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class CountyConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<County>
    {
        public CountyConfiguration()
            : this("dbo")
        {
        }

        public CountyConfiguration(string schema)
        {
            ToTable("County", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.StateId).HasColumnName(@"StateId").HasColumnType("int").IsRequired();
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.Code).HasColumnName(@"Code").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.Gnis).HasColumnName(@"GNIS").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.FipsStcty).HasColumnName(@"FIPS_STCTY").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.Fips).HasColumnName(@"FIPS").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.CreateBy).HasColumnName(@"CreateBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime").IsRequired();
            Property(x => x.LastModifyBy).HasColumnName(@"LastModifyBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.LastModifyDate).HasColumnName(@"LastModifyDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.State).WithMany(b => b.Counties).HasForeignKey(c => c.StateId).WillCascadeOnDelete(false); // FK_County_State
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // EmailType
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class EmailTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<EmailType>
    {
        public EmailTypeConfiguration()
            : this("dbo")
        {
        }

        public EmailTypeConfiguration(string schema)
        {
            ToTable("EmailType", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.CreateBy).HasColumnName(@"CreateBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime").IsRequired();
            Property(x => x.LastModifyBy).HasColumnName(@"LastModifyBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.LastModifyDate).HasColumnName(@"LastModifyDate").HasColumnType("datetime").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // PhoneType
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class PhoneTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<PhoneType>
    {
        public PhoneTypeConfiguration()
            : this("dbo")
        {
        }

        public PhoneTypeConfiguration(string schema)
        {
            ToTable("PhoneType", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.CreateBy).HasColumnName(@"CreateBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime").IsRequired();
            Property(x => x.LastModifyBy).HasColumnName(@"LastModifyBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.LastModifyDate).HasColumnName(@"LastModifyDate").HasColumnType("datetime").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // State
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class StateConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<State>
    {
        public StateConfiguration()
            : this("dbo")
        {
        }

        public StateConfiguration(string schema)
        {
            ToTable("State", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.CountryId).HasColumnName(@"CountryId").HasColumnType("int").IsRequired();
            Property(x => x.Code).HasColumnName(@"Code").HasColumnType("nvarchar").IsRequired().HasMaxLength(2);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").IsRequired().HasMaxLength(128);
            Property(x => x.CreateBy).HasColumnName(@"CreateBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime").IsRequired();
            Property(x => x.LastModifyBy).HasColumnName(@"LastModifyBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.LastModifyDate).HasColumnName(@"LastModifyDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.Country).WithMany(b => b.States).HasForeignKey(c => c.CountryId).WillCascadeOnDelete(false); // FK_State_Country
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // UnitRoundingType
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
    public partial class UnitRoundingTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UnitRoundingType>
    {
        public UnitRoundingTypeConfiguration()
            : this("dbo")
        {
        }

        public UnitRoundingTypeConfiguration(string schema)
        {
            ToTable("UnitRoundingType", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.CreateBy).HasColumnName(@"CreateBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime").IsRequired();
            Property(x => x.LastModifyBy).HasColumnName(@"LastModifyBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.LastModifyDate).HasColumnName(@"LastModifyDate").HasColumnType("datetime").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    #endregion

}
// </auto-generated>


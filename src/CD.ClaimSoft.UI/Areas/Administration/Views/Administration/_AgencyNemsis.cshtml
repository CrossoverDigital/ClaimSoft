@using CD.ClaimSoft.Application.Models.Agencies

@using Syncfusion.JavaScript
@using Syncfusion.MVC.EJ

@model Agency

<div style="margin: 5px">
    <div style="float: left; margin: 5px">
        @(Html.EJ().Grid<object>
            ("AgencyAddressGrid").HtmlAttributes(new { style = "width:650px; height: 245px;" })
            .Datasource(ds => ds.Json(ViewBag.AgencyAddressDataSource)
                .UpdateURL("/Administration/Administration/AgencyAddressUpdate")
                .InsertURL("/Administration/Administration/AgencyAddressInsert")
                .RemoveURL("/Administration/Administration/AgencyAddressDelete")
                .Adaptor(AdaptorType.RemoteSaveAdaptor))
            .IsResponsive()
            .EditSettings(edit =>
            {
                edit.AllowAdding()
                    .AllowEditing()
                    .AllowDeleting()
                    .EditMode(EditMode.InlineFormTemplate)
                    .InlineFormTemplateID("addressEditTemplate");
            })
            .ToolbarSettings(tools =>
            {
                tools.ShowToolbar()
                    .ToolbarItems(items =>
                    {
                        items.AddTool(ToolBarItems.Add);
                        items.AddTool(ToolBarItems.Edit);
                        items.AddTool(ToolBarItems.Delete);
                    });
            })
            .Columns(col =>
            {
                col.Field("Address1").HeaderText("Address1").Width(150).Priority(1).Add();
                col.Field("City").HeaderText("City").Priority(2).Width(50).Add();
                col.Field("CountyName").HeaderText("County").Width(50).Priority(3).Add();
                col.Field("StateName").HeaderText("State").Width(50).Priority(3).Add();
                col.Field("ZipCode").HeaderText("Zip Code").Width(110).Priority(4).Add();
            })
            .ClientSideEvents(events =>
            {
                events.ActionComplete("actionAddressEditComplete");
                events.ActionBegin("actionAddressEditBegin");
            }))
    </div>
    <div style="float: left; margin: 5px">
        @(Html.EJ().Grid<object>
            ("AgencyPhoneGrid").HtmlAttributes(new { style = "width:400px; height: 245px;" })
            .Datasource(ds => ds.Json(ViewBag.AgencyPhoneDataSource)
                .UpdateURL("/Administration/Administration/AgencyPhoneUpdate")
                .InsertURL("/Administration/Administration/AgencyPhoneInsert")
                .RemoveURL("/Administration/Administration/AgencyPhoneDelete")
                .Adaptor(AdaptorType.RemoteSaveAdaptor))
            .IsResponsive()
            .EditSettings(edit =>
            {
                edit.AllowAdding()
                    .AllowEditing()
                    .AllowDeleting()
                    .EditMode(EditMode.InlineFormTemplate)
                    .InlineFormTemplateID("phoneEditTemplate");
            })
            .ToolbarSettings(tools =>
            {
                tools.ShowToolbar()
                    .ToolbarItems(items =>
                    {
                        items.AddTool(ToolBarItems.Add);
                        items.AddTool(ToolBarItems.Edit);
                        items.AddTool(ToolBarItems.Delete);
                    });
            })
            .Columns(col =>
            {
                col.Field("PhoneNumber").HeaderText("Phone Number").Width(150).Priority(1).Add();
                col.Field("PhoneType.Name").HeaderText("Phone Type").Priority(2).Width(50).Add();
            })
            .ClientSideEvents(events =>
            {
                events.ActionComplete("actionPhoneEditComplete");
                events.ActionBegin("actionPhoneEditBegin");
            }))
    </div>
    <div class="clear"></div>
</div>

@(Html.EJ().ScriptManager())

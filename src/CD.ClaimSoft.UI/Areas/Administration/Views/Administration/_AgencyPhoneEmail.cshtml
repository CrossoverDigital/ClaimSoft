@using CD.ClaimSoft.Database.Model.Agency
@using Syncfusion.JavaScript
@using Syncfusion.MVC.EJ

@inherits CD.ClaimSoft.UI.Common.CustomViewPage<CD.ClaimSoft.Database.Model.Agency.Agency>

<div style="float: left; margin: 5px">
    @(Html.EJ().Grid<AgencyPhone>
            ("AgencyPhoneGrid").HtmlAttributes(new { style = "width:400px; min-height: 245px;" })
            .Datasource(ds => ds.Json(@Model.AgencyPhones)
                .UpdateURL("/Administration/Administration/AgencyPhoneUpdate")
                .InsertURL("/Administration/Administration/AgencyPhoneInsert")
                .RemoveURL("/Administration/Administration/AgencyPhoneDelete")
                .Adaptor(AdaptorType.RemoteSaveAdaptor))
            .IsResponsive()
          .EnableAutoSaveOnSelectionChange(false)
            .EditSettings(edit =>
            {
                edit.AllowAdding()
                    .AllowEditing()
                    .AllowDeleting()
                    .EditMode(EditMode.InlineFormTemplate)
                    .InlineFormTemplateID("phoneEditTemplate");
            })
            .ToolbarSettings(tools =>
            {
                tools.ShowToolbar()
                    .ToolbarItems(items =>
                    {
                        items.AddTool(ToolBarItems.Add);
                        items.AddTool(ToolBarItems.Edit);
                        items.AddTool(ToolBarItems.Delete);
                    });
            })
            .Columns(col =>
            {
                col.Field("Id").HeaderText("Phone Id").IsPrimaryKey(true).Visible(false).Add();
                col.Field("PhoneNumber").HeaderText("Phone Number").Width(150).Priority(1).Add(); //.Format("{0:(###) ###-####}")
                col.Field("PhoneType.Name").HeaderText("Phone Type").IsPrimaryKey(true).Priority(2).Width(50).Add();
            })
            .ClientSideEvents(events =>
            {
                events.ActionComplete("AgencyPhoneGridEditComplete");
                events.ActionBegin("AgencyPhoneGridEditBegin");
            }))
</div>

<div style="float: left; margin: 5px">
    @(Html.EJ().Grid<AgencyEmail>
          ("AgencyEmailGrid").HtmlAttributes(new { style = "width:400px; min-height: 245px;" })
          .Datasource(ds => ds.Json(@Model.AgencyEmails)
              .UpdateURL("/Administration/Administration/AgencyEmailUpdate")
              .InsertURL("/Administration/Administration/AgencyEmailInsert")
              .RemoveURL("/Administration/Administration/AgencyEmailDelete")
              .Adaptor(AdaptorType.RemoteSaveAdaptor))
          .IsResponsive()
          .EnableAutoSaveOnSelectionChange(false)
          .EditSettings(edit =>
          {
              edit.AllowAdding()
                  .AllowEditing()
                  .AllowDeleting()
                  .EditMode(EditMode.InlineFormTemplate)
                  .InlineFormTemplateID("emailEditTemplate");
          })
          .ToolbarSettings(tools =>
          {
              tools.ShowToolbar()
                  .ToolbarItems(items =>
                  {
                      items.AddTool(ToolBarItems.Add);
                      items.AddTool(ToolBarItems.Edit);
                      items.AddTool(ToolBarItems.Delete);
                  });
          })
          .Columns(col =>
          {
              col.Field("Id").HeaderText("Email Id").IsPrimaryKey(true).Visible(false).Add();
              col.Field("EmailAddress").HeaderText("Email Address").Width(150).Priority(1).Add();
              col.Field("EmailType.Name").HeaderText("Email Type").IsPrimaryKey(true).Priority(2).Width(50).Add();
          })
          .ClientSideEvents(events =>
          {
              events.ActionComplete("AgencyEmailEditComplete");
              events.ActionBegin("AgencyEmailEditBegin");
          }))
</div>

<div class="clear"></div>

<script>

    function AgencyPhoneGridEditBegin(args) {
        if (args.requestType === "save")
            this.element.ejWaitingPopup("show");
    }

    function AgencyPhoneGridEditComplete(args) {
        var type = args.requestType;
        if (type === "beginedit" || type === "add") {
            $("#AgencyPhoneGrid_inlineFormTitle").hide();

            var selectedPhone = null;
            if (!ej.isNullOrUndefined(args.rowIndex))
                selectedPhone = this.model.currentViewData[args.rowIndex];

            this.element.ejWaitingPopup("show");

            if (type === "add") {
                $.ajax({
                    url: '@Url.Action("AgencyPhoneAdd", "Administration", new {Area = "Administration"})',
                    type: "POST",
                    data: '{ agencyId: ' + $('#AgencyId').val() + '}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "html",
                    success: ej.proxy(function(data) {
                            var containerId = $("#" + this._id + "EditForm");

                            containerId.html(data);

                            ej.widget.init(containerId);

                            this.element.ejWaitingPopup("hide");
                        },
                        this)
                });
            } else {
                $.ajax({
                    url: '@Url.Action("AgencyPhoneEdit", "Administration", new {Area = "Administration"})',
                    type: "POST",
                    data: '{ agencyPhone: ' + JSON.stringify(selectedPhone) + '}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "html",
                    success: ej.proxy(function (data) {
                        var containerId = $("#" + this._id + "EditForm");

                        containerId.html(data);

                        ej.widget.init(containerId);

                        this.element.ejWaitingPopup("hide");
                    }, this)
                });
            }

            if (args.requestType === "save")
                this.element.ejWaitingPopup("hide");
        }
    }

    function AgencyEmailEditBegin(args) {
        if (args.requestType === "save")
            this.element.ejWaitingPopup("show");
    }

    function AgencyEmailEditComplete(args) {
        var type = args.requestType;
        if (type === "beginedit" || type === "add") {
            $("#AgencyEmailGrid_inlineFormTitle").hide();

            var selectedEmail = null;
            if (!ej.isNullOrUndefined(args.rowIndex))
                selectedEmail = this.model.currentViewData[args.rowIndex];

            this.element.ejWaitingPopup("show");

            if (type === "add") {
                $.ajax({
                    url: '@Url.Action("AgencyEmailAdd", "Administration", new {Area = "Administration"})',
                    type: "POST",
                    data: '{ agencyId: ' + $('#AgencyId').val() + '}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "html",
                    success: ej.proxy(function(data) {
                            var containerId = $("#" + this._id + "EditForm");

                            containerId.html(data);

                            ej.widget.init(containerId);

                            this.element.ejWaitingPopup("hide");
                        },
                        this)
                });
            } else {
                $.ajax({
                    url: '@Url.Action("AgencyEmailEdit", "Administration", new {Area = "Administration"})',
                    type: "POST",
                    data: '{ agencyEmail: ' + JSON.stringify(selectedEmail) + '}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "html",
                    success: ej.proxy(function (data) {
                        var containerId = $("#" + this._id + "EditForm");

                        containerId.html(data);

                        ej.widget.init(containerId);

                        this.element.ejWaitingPopup("hide");
                    }, this)
                });
            }

            if (args.requestType === "save")
                this.element.ejWaitingPopup("hide");
        }
    }

    //# sourceURL=AgencyPhoneEmail.cshtml
</script>


@(Html.EJ().ScriptManager())
